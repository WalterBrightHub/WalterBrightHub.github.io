                                                                                                                                                                                                                    [{"title":"《ES6函数式编程入门经典》读书笔记","url":"/2019-03/函数式编程入门经典读书笔记/","content":"《ES6函数式编程入门经典》读书笔记函数式编程简介概念函数的概念。函数是通过其名字调用的代码，它可以传递参数并返回值。函数式编程主张至少接受一个参数，并且返回一个值。和方法的区别：方法是通过其名称与关联的对象来调用。函数的两个特性引用透明性。函数对相同的输入总有相同的输出。好处是并发编程、可缓存代码（如阶乘）。声明式编程。与命令式编程不同，函数式编程主张以抽象的方式创建函数。函数式编程的好处纯函数。纯函数使得代码易于阅读、理解、测试。并发代码。无需担心同步问题。编写可缓存、可记忆的函数。管道与（函数式）组合。组合是函数式编程范式的核心。纯函数是数学函数，可以将数学思想引入编程思想。JavaScript函数基础书中的Node还不支持ES6，故用babel编译运行。如今Node已经支持ES6，直接运行JS文件即可。forEach(array,fn)对数组的每一个元素调用fn高阶函数理解数据JavaScript数据类型NumberStringBooleanObjectnullundefined函数是一等公民，可以赋值给变量、作为函数参数、作为函数返回值。抽象和高阶函数抽象：隐藏实现细节，专注于实现，降低复杂度。高阶函数实现抽象forEach(array,fn)forEachObject(object,fn)unless(predicate,fn)times(times,fn)every(array,fn)some(array,fn)sort闭包与高阶函数闭包函数闭包是一个函数内部的另一个函数。它有三个可访问作用域：本身内声明的变量全局变量外部函数定义的变量使用闭包构建高阶函数：tap接受一个value，返回一个包含value的闭包函数。unary类似于适配器模式。once只执行一次给定的函数。memoized数组的函数式编程投影函数mapfilter连接函数连接map和filter，最简单的方法是直接嵌套。concatAll是一个辅助函数，辅助函数之间的连接。concatAll(array,fn)将嵌套（一层的）数组转化为非嵌套的单一数组。reducereduce(array,fn,initValue)将数组归约成一个单一的值。实现zipzip(leftArr,rightArr,fn)柯里化与偏应用预备知识：一元函数、二元函数、变参函数。概念：柯里化是将一个多参函数转化为嵌套的一元函数的过程。实例偏函数偏函数用于创建创建可重用的函数，而不需要自己写包装器。实例组合与管道组合概念：以一个函数的输出作为另一个函数的输入的方式，将多个函数结合起来。composecompose(…fns)组合多个函数，数据流是从右至左的。pipe(…fns)数据流是从左至右的，管道pipeline也可以称作序列sequence。实现上两者只有很小的不同。实现如何组合多参函数？使用柯里化和偏应用即可。实例组合的优势组合符合结合律。组合的应用方便地log。创建identity函数，在数据流中随意的插入或移除，方便调试。函子函子是一个对象或者类，它实现了map函数，在遍历每个对象值的时候生成新的对象。简单的说，函子是一个包含值的容器，并且实现了map函数。实现Maybe该函子会检查传入的值是否为null或者undefined，如果是则什么也不做。该函子用于错误处理。实现EitherEither用于解决分支拓展问题。使用EitherMonadMonad是一个实现chain方法的函子。join方法返回函子包含的值。chain方法包装了map和join方法。实现使用（书上的示例太复杂，写个简单的）","tags":["js"],"categories":["js","函数式编程"]}]